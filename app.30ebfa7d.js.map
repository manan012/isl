{"version":3,"sources":["node_modules/speak-tts/lib/utils.js","node_modules/speak-tts/lib/speak-tts.js","src/app.js"],"names":["Speech","require","_addVoicesList","voices","list","window","document","createElement","html","forEach","voice","lang","name","innerHTML","body","appendChild","_init","speech","init","volume","rate","pitch","listeners","onvoiceschanged","console","log","then","data","_prepareSpeakButton","catch","e","error","text","hasBrowserSupport","getElementById","speakButton","pauseButton","resumeButton","textarea","languages","addEventListener","language","value","options","selectedIndex","dataset","setLanguage","setVoice","speak","queue","onstart","onend","onresume","onboundary","event","elapsedTime","pause","resume"],"mappings":"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","file":"app.30ebfa7d.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trim = exports.isObject = exports.isNil = exports.isNan = exports.size = exports.isString = exports.validateLocale = exports.splitSentences = void 0;\n\nvar splitSentences = function splitSentences() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return text.replace(/\\.+/g, '.|').replace(/\\?/g, '?|').replace(/\\!/g, '!|').split(\"|\").map(function (sentence) {\n    return trim(sentence);\n  }).filter(Boolean);\n};\n\nexports.splitSentences = splitSentences;\nvar bcp47LocalePattern = /^(?:(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))$|^((?:[a-z]{2,3}(?:(?:-[a-z]{3}){1,3})?)|[a-z]{4}|[a-z]{5,8})(?:-([a-z]{4}))?(?:-([a-z]{2}|\\d{3}))?((?:-(?:[\\da-z]{5,8}|\\d[\\da-z]{3}))*)?((?:-[\\da-wy-z](?:-[\\da-z]{2,8})+)*)?(-x(?:-[\\da-z]{1,8})+)?$|^(x(?:-[\\da-z]{1,8})+)$/i; // eslint-disable-line max-len\n\n/**\n * Validate a locale string to test if it is bcp47 compliant\n * @param {String} locale The tag locale to parse\n * @return {Boolean} True if tag is bcp47 compliant false otherwise\n */\n\nvar validateLocale = function validateLocale(locale) {\n  return typeof locale !== 'string' ? false : bcp47LocalePattern.test(locale);\n};\n\nexports.validateLocale = validateLocale;\n\nvar isString = function isString(value) {\n  return typeof value === 'string' || value instanceof String;\n};\n\nexports.isString = isString;\n\nvar size = function size(value) {\n  return value && Array.isArray(value) && value.length ? value.length : 0;\n};\n\nexports.size = size;\n\nvar isNan = function isNan(value) {\n  return typeof value === \"number\" && isNaN(value);\n};\n\nexports.isNan = isNan;\n\nvar isNil = function isNil(value) {\n  return value === null || value === undefined;\n};\n\nexports.isNil = isNil;\n\nvar isObject = function isObject(value) {\n  return Object.prototype.toString.call(value) === '[object Object]';\n};\n\nexports.isObject = isObject;\n\nvar trim = function trim(value) {\n  return isString(value) ? value.trim() : '';\n};\n\nexports.trim = trim;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _utils = require(\"./utils\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SpeakTTS =\n/*#__PURE__*/\nfunction () {\n  function SpeakTTS() {\n    _classCallCheck(this, SpeakTTS);\n\n    this.browserSupport = 'speechSynthesis' in window && 'SpeechSynthesisUtterance' in window;\n    this.synthesisVoice = null;\n  }\n\n  _createClass(SpeakTTS, [{\n    key: \"init\",\n    value: function init() {\n      var _this = this;\n\n      var conf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return new Promise(function (resolve, reject) {\n        if (!_this.browserSupport) {\n          reject('Your browser does not support Speech Synthesis');\n        }\n\n        var listeners = (0, _utils.isNil)(conf.listeners) ? {} : conf.listeners;\n        var splitSentences = (0, _utils.isNil)(conf.splitSentences) ? true : conf.splitSentences;\n        var lang = (0, _utils.isNil)(conf.lang) ? undefined : conf.lang;\n        var volume = (0, _utils.isNil)(conf.volume) ? 1 : conf.volume;\n        var rate = (0, _utils.isNil)(conf.rate) ? 1 : conf.rate;\n        var pitch = (0, _utils.isNil)(conf.pitch) ? 1 : conf.pitch;\n        var voice = (0, _utils.isNil)(conf.voice) ? undefined : conf.voice; // Attach event listeners\n\n        Object.keys(listeners).forEach(function (listener) {\n          var fn = listeners[listener];\n\n          var newListener = function newListener(data) {\n            fn && fn(data);\n          };\n\n          if (listener !== 'onvoiceschanged') {\n            speechSynthesis[listener] = newListener;\n          }\n        });\n\n        _this._loadVoices().then(function (voices) {\n          // Handle callback onvoiceschanged by hand\n          listeners['onvoiceschanged'] && listeners['onvoiceschanged'](voices); // Initialize values if necessary\n\n          !(0, _utils.isNil)(lang) && _this.setLanguage(lang);\n          !(0, _utils.isNil)(voice) && _this.setVoice(voice);\n          !(0, _utils.isNil)(volume) && _this.setVolume(volume);\n          !(0, _utils.isNil)(rate) && _this.setRate(rate);\n          !(0, _utils.isNil)(pitch) && _this.setPitch(pitch);\n          !(0, _utils.isNil)(splitSentences) && _this.setSplitSentences(splitSentences);\n          resolve({\n            voices: voices,\n            lang: _this.lang,\n            voice: _this.voice,\n            volume: _this.volume,\n            rate: _this.rate,\n            pitch: _this.pitch,\n            splitSentences: _this.splitSentences,\n            browserSupport: _this.browserSupport\n          });\n        }).catch(function (e) {\n          reject(e);\n        });\n      });\n    }\n  }, {\n    key: \"_fetchVoices\",\n    value: function _fetchVoices() {\n      return new Promise(function (resolve, reject) {\n        setTimeout(function () {\n          var voices = speechSynthesis.getVoices();\n\n          if ((0, _utils.size)(voices) > 0) {\n            return resolve(voices);\n          } else {\n            return reject(\"Could not fetch voices\");\n          }\n        }, 100);\n      });\n    }\n  }, {\n    key: \"_loadVoices\",\n    value: function _loadVoices() {\n      var _this2 = this;\n\n      var remainingAttempts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n      return this._fetchVoices().catch(function (error) {\n        if (remainingAttempts === 0) throw error;\n        return _this2._loadVoices(remainingAttempts - 1);\n      });\n    }\n  }, {\n    key: \"hasBrowserSupport\",\n    value: function hasBrowserSupport() {\n      return this.browserSupport;\n    }\n  }, {\n    key: \"setVoice\",\n    value: function setVoice(voice) {\n      var synthesisVoice;\n      var voices = speechSynthesis.getVoices(); // set voice by name\n\n      if ((0, _utils.isString)(voice)) {\n        synthesisVoice = voices.find(function (v) {\n          return v.name === voice;\n        });\n      } // Set the voice in conf if found\n\n\n      if ((0, _utils.isObject)(voice)) {\n        synthesisVoice = voice;\n      }\n\n      if (synthesisVoice) {\n        this.synthesisVoice = synthesisVoice;\n      } else {\n        throw 'Error setting voice. The voice you passed is not valid or the voices have not been loaded yet.';\n      }\n    }\n  }, {\n    key: \"setLanguage\",\n    value: function setLanguage(lang) {\n      lang = lang.replace('_', '-'); // some Android versions seem to ignore BCP 47 and use an underscore character in language tag\n\n      if ((0, _utils.validateLocale)(lang)) {\n        this.lang = lang;\n      } else {\n        throw 'Error setting language. Please verify your locale is BCP47 format (http://schneegans.de/lv/?tags=es-FR&format=text)';\n      }\n    }\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      volume = parseFloat(volume);\n\n      if (!(0, _utils.isNan)(volume) && volume >= 0 && volume <= 1) {\n        this.volume = volume;\n      } else {\n        throw 'Error setting volume. Please verify your volume value is a number between 0 and 1.';\n      }\n    }\n  }, {\n    key: \"setRate\",\n    value: function setRate(rate) {\n      rate = parseFloat(rate);\n\n      if (!(0, _utils.isNan)(rate) && rate >= 0 && rate <= 10) {\n        this.rate = rate;\n      } else {\n        throw 'Error setting rate. Please verify your volume value is a number between 0 and 10.';\n      }\n    }\n  }, {\n    key: \"setPitch\",\n    value: function setPitch(pitch) {\n      pitch = parseFloat(pitch);\n\n      if (!(0, _utils.isNan)(pitch) && pitch >= 0 && pitch <= 2) {\n        this.pitch = pitch;\n      } else {\n        throw 'Error setting pitch. Please verify your pitch value is a number between 0 and 2.';\n      }\n    }\n  }, {\n    key: \"setSplitSentences\",\n    value: function setSplitSentences(splitSentences) {\n      this.splitSentences = splitSentences;\n    }\n  }, {\n    key: \"speak\",\n    value: function speak(data) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var text = data.text,\n            _data$listeners = data.listeners,\n            listeners = _data$listeners === void 0 ? {} : _data$listeners,\n            _data$queue = data.queue,\n            queue = _data$queue === void 0 ? true : _data$queue;\n        var msg = (0, _utils.trim)(text);\n        if ((0, _utils.isNil)(msg)) resolve(); // Stop current speech\n\n        !queue && _this3.cancel(); // Split into sentences (for better result and bug with some versions of chrome)\n\n        var utterances = [];\n        var sentences = _this3.splitSentences ? (0, _utils.splitSentences)(msg) : [msg];\n        sentences.forEach(function (sentence, index) {\n          var isLast = index === (0, _utils.size)(sentences) - 1;\n          var utterance = new SpeechSynthesisUtterance();\n          if (_this3.synthesisVoice) utterance.voice = _this3.synthesisVoice;\n          if (_this3.lang) utterance.lang = _this3.lang;\n          if (_this3.volume) utterance.volume = _this3.volume; // 0 to 1\n\n          if (_this3.rate) utterance.rate = _this3.rate; // 0.1 to 10\n\n          if (_this3.pitch) utterance.pitch = _this3.pitch; //0 to 2\n\n          utterance.text = sentence; // Attach event listeners\n\n          Object.keys(listeners).forEach(function (listener) {\n            var fn = listeners[listener];\n\n            var newListener = function newListener(data) {\n              fn && fn(data);\n\n              if (listener === 'onerror') {\n                reject({\n                  utterances: utterances,\n                  lastUtterance: utterance,\n                  error: data\n                });\n              }\n\n              if (listener === 'onend') {\n                if (isLast) resolve({\n                  utterances: utterances,\n                  lastUtterance: utterance\n                });\n              }\n            };\n\n            utterance[listener] = newListener;\n          });\n          utterances.push(utterance);\n          speechSynthesis.speak(utterance);\n        });\n      });\n    }\n  }, {\n    key: \"pending\",\n    value: function pending() {\n      return speechSynthesis.pending;\n    }\n  }, {\n    key: \"paused\",\n    value: function paused() {\n      return speechSynthesis.paused;\n    }\n  }, {\n    key: \"speaking\",\n    value: function speaking() {\n      return speechSynthesis.speaking;\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      speechSynthesis.pause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      speechSynthesis.resume();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      speechSynthesis.cancel();\n    }\n  }]);\n\n  return SpeakTTS;\n}();\n\nvar _default = SpeakTTS;\nexports.default = _default;","var Speech=require(\"speak-tts\");\nconst _addVoicesList = voices => {\n  const list = window.document.createElement(\"div\");\n  let html =\n    '<h2>Available Voices</h2><select id=\"languages\"><option value=\"\">autodetect language</option>';\n  voices.forEach(voice => {\n    html += `<option value=\"${voice.lang}\" data-name=\"${voice.name}\">${\n      voice.name\n    } (${voice.lang})</option>`;\n  });\n  list.innerHTML = html;\n  window.document.body.appendChild(list);\n};\n\nfunction _init() {\n  const speech = new Speech();\n  speech\n    .init({\n      volume: 0.5,\n      lang: \"en-GB\",\n      rate: 1,\n      pitch: 1,\n      //'voice':'Google UK English Male',\n      //'splitSentences': false,\n      listeners: {\n        onvoiceschanged: voices => {\n          console.log(\"Voices changed\", voices);\n        }\n      }\n    })\n    .then(data => {\n      console.log(\"Speech is ready\", data);\n      _addVoicesList(data.voices);\n      _prepareSpeakButton(speech);\n    })\n    .catch(e => {\n      console.error(\"An error occured while initializing : \", e);\n    });\n  const text = speech.hasBrowserSupport()\n    ? \"Hurray, your browser supports speech synthesis\"\n    : \"Your browser does NOT support speech synthesis. Try using Chrome of Safari instead !\";\n  document.getElementById(\"support\").innerHTML = text;\n}\n\nfunction _prepareSpeakButton(speech) {\n  const speakButton = document.getElementById(\"play\");\n  const pauseButton = document.getElementById(\"pause\");\n  const resumeButton = document.getElementById(\"resume\");\n  const textarea = document.getElementById(\"text\");\n  const languages = document.getElementById(\"languages\");\n  speakButton.addEventListener(\"click\", () => {\n    const language = languages.value;\n    const voice = languages.options[languages.selectedIndex].dataset.name;\n    if (language) speech.setLanguage(languages.value);\n    if (voice) speech.setVoice(voice);\n    speech\n      .speak({\n        text: textarea.value,\n        queue: false,\n        listeners: {\n          onstart: () => {\n            console.log(\"Start utterance\");\n          },\n          onend: () => {\n            console.log(\"End utterance\");\n          },\n          onresume: () => {\n            console.log(\"Resume utterance\");\n          },\n          onboundary: event => {\n            console.log(\n              event.name +\n                \" boundary reached after \" +\n                event.elapsedTime +\n                \" milliseconds.\"\n            );\n          }\n        }\n      })\n      .then(data => {\n        console.log(\"Success !\", data);\n      })\n      .catch(e => {\n        console.error(\"An error occurred :\", e);\n      });\n  });\n\n  pauseButton.addEventListener(\"click\", () => {\n    speech.pause();\n  });\n\n  resumeButton.addEventListener(\"click\", () => {\n    speech.resume();\n  });\n}\n\n_init();\n\n"]}